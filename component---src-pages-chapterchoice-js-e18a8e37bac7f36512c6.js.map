{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","webpack:///./src/components/chapterelement.js","webpack:///./src/pages/chapterchoice.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","ToggleButton","children","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","onChange","onClick","selected","_props$size","size","value","concat","focusRipple","event","isDefaultPrevented","label","theme","typography","button","boxSizing","borderRadius","shape","height","padding","border","palette","action","active","color","backgroundColor","borderLeft","marginLeft","textDecoration","text","primary","width","display","alignItems","justifyContent","sizeSmall","fontSize","pxToRem","sizeLarge","ChapterElement","getResourceText","useContext","LanguageContext","QuizSessionContext","setCurrentQuizSettings","getCurrentSettings","CardContent","Typography","gutterBottom","variant","component","titleKey","sublineKey","Grid","item","ToggleButtonGroup","style","chapter","exclusive","newChapter","settings","words","require","map","chp","index","key","CardActions","Button","navigate","goto","state","Chapters","location","globalHistory","_props$color","_props$component","_props$disableElevati","disableElevation","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","startIconProp","startIcon","_props$type","type","_props$variant","colorInherit","focusVisible","minWidth","transition","transitions","create","duration","hoverOpacity","textPrimary","main","textSecondary","secondary","outlined","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","marginRight","iconSizeSmall","iconSizeMedium","iconSizeLarge","_props$disableSpacing","disableSpacing","spacing","Component","paddingBottom","_props$exclusive","handleChange","buttonValue","newValue","indexOf","splice","handleExclusiveChange","role","child","_child$props","buttonSelected","undefined","candidate","Array","isArray","isValueSelected","grouped","capitalize","withStyles","background","paper","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedSizeSmall","groupedSizeLarge"],"mappings":"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","file":"component---src-pages-chapterchoice-js-e18a8e37bac7f36512c6.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return (/*#__PURE__*/React.createElement(Paper, _extends({\n      className: clsx(classes.root, className),\n      elevation: raised ? 8 : 1,\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent ButtonBase\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      height: 48,\n      padding: '0px 12px',\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 40,\n      padding: '0px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      height: 56,\n      padding: '0px 16px',\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return (/*#__PURE__*/React.createElement(ButtonBase, _extends({\n      className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n      disabled: disabled,\n      focusRipple: !disableFocusRipple,\n      ref: ref,\n      onClick: handleChange,\n      onChange: onChange,\n      value: value,\n      \"aria-pressed\": selected\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.label\n    }, children))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","import React, { useContext } from \"react\"\r\nimport { LanguageContext } from \"../context/LanguageContext\"\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\"\r\n\r\nimport { navigate } from \"gatsby\"\r\n\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\"\r\n\r\nimport { QuizSessionContext } from \"../context/QuizSessionContext\"\r\n\r\nfunction ChapterElement(props) {\r\n  const { getResourceText } = useContext(LanguageContext)\r\n\r\n  const { setCurrentQuizSettings, getCurrentSettings } = useContext(\r\n    QuizSessionContext\r\n  )\r\n\r\n  const handleChange = (event, newChapter) => {\r\n    const source = require(\"../data/articles/allchapters.json\")\r\n\r\n    const settings = {\r\n      words: source[newChapter],\r\n      chapter: newChapter,\r\n    }\r\n\r\n    setCurrentQuizSettings(settings)\r\n    //setWordsSource(\"../data/articles/allchapters.json\")\r\n  }\r\n\r\n  const handleNavigation = () => {\r\n    if (getCurrentSettings().chapter !== null)\r\n      navigate(props.goto, { state: { chapter: getCurrentSettings().chapter } })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {getResourceText(props.titleKey)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {getResourceText(props.sublineKey)}\r\n        </Typography>\r\n        <Grid item>\r\n          <ToggleButtonGroup\r\n            style={{ display: \"block\" }}\r\n            value={getCurrentSettings().chapter}\r\n            exclusive\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          >\r\n            {[0, 1, 2, 3, 4, 5, 6].map((chp, index) => (\r\n              <ToggleButton style={{ width: \"100%\" }} key={index} value={chp}>\r\n                {`${getResourceText(\"Chapter\")} ${chp + 1}`}\r\n              </ToggleButton>\r\n            ))}\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" onClick={() => handleNavigation()} color=\"primary\">\r\n          {getResourceText(\"Start\")}\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ChapterElement\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport ChapterElement from \"../components/chapterelement\"\r\nimport { globalHistory } from \"@reach/router\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nfunction Chapters({ location }) {\r\n  let goto = \"/quiz/\"\r\n  let titleKey = \"\"\r\n  let sublineKey = \"\"\r\n  if (typeof location.state !== \"undefined\" && location.state) {\r\n    goto = globalHistory.location.state.goto\r\n    titleKey = globalHistory.location.state.titleKey\r\n    sublineKey = globalHistory.location.state.sublineKey\r\n  }\r\n\r\n  if (titleKey === \"\") {\r\n    navigate(\"/home\")\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <ChapterElement goto={goto} titleKey={titleKey} sublineKey={sublineKey} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Chapters\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration[\"short\"]\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return (/*#__PURE__*/React.createElement(ButtonBase, _extends({\n      className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n      component: component,\n      disabled: disabled,\n      focusRipple: !disableFocusRipple,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      ref: ref,\n      type: type\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.label\n    }, startIcon, children, endIcon))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return (/*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return (/*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.index-of\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: theme.shape.borderRadius,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      padding: '0px 11px 0px 12px',\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `size=\"small\"`. */\n    groupedSizeSmall: {\n      padding: '0px 7px 0px 8px'\n    },\n\n    /* Styles applied to the children if `size=\"large\"`. */\n    groupedSizeLarge: {\n      padding: '0px 15px 0px 16px'\n    }\n  };\n};\nvar ToggleButtonGroup = React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = _toConsumableArray(value);\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? [].concat(_toConsumableArray(value), [buttonValue]) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return (/*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: \"group\"\n    }, other), React.Children.map(children, function (child) {\n      if (!React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"Material-UI: the ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      var _child$props = child.props,\n          buttonSelected = _child$props.selected,\n          buttonValue = _child$props.value;\n      var selected = buttonSelected === undefined ? isValueSelected(buttonValue, value) : buttonSelected;\n      return React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className, size !== 'medium' && classes[\"groupedSize\".concat(capitalize(size))]),\n        selected: selected,\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        size: size\n      });\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The size of the buttons.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.is-array\";\n// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}"],"sourceRoot":""}