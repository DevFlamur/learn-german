{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","webpack:///./src/components/chapterelement.js","webpack:///./src/pages/chapterchoice.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","ToggleButton","children","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","onChange","onClick","selected","_props$size","size","value","concat","focusRipple","event","isDefaultPrevented","label","theme","typography","button","boxSizing","borderRadius","shape","height","padding","border","palette","action","active","color","backgroundColor","borderLeft","marginLeft","textDecoration","text","primary","width","display","alignItems","justifyContent","sizeSmall","fontSize","pxToRem","sizeLarge","ChapterElement","getResourceText","useContext","LanguageContext","QuizSessionContext","setCurrentQuizSettings","getCurrentSettings","handleNavigation","chp","chapter","navigate","goto","state","CardContent","Typography","gutterBottom","variant","component","titleKey","sublineKey","Grid","item","ToggleButtonGroup","style","exclusive","map","index","source","require","questionType","settings","words","handleChapterChange","key","Chapters","location","globalHistory","_props$component","Component","paddingBottom","_props$exclusive","handleChange","buttonValue","newValue","indexOf","splice","handleExclusiveChange","role","child","_child$props","buttonSelected","undefined","candidate","Array","isArray","isValueSelected","grouped","capitalize","withStyles","background","paper","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedSizeSmall","groupedSizeLarge"],"mappings":"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","file":"component---src-pages-chapterchoice-js-2c7f8973ce7f0588d994.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return (/*#__PURE__*/React.createElement(Paper, _extends({\n      className: clsx(classes.root, className),\n      elevation: raised ? 8 : 1,\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent ButtonBase\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      height: 48,\n      padding: '0px 12px',\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 40,\n      padding: '0px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      height: 56,\n      padding: '0px 16px',\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return (/*#__PURE__*/React.createElement(ButtonBase, _extends({\n      className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n      disabled: disabled,\n      focusRipple: !disableFocusRipple,\n      ref: ref,\n      onClick: handleChange,\n      onChange: onChange,\n      value: value,\n      \"aria-pressed\": selected\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.label\n    }, children))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","import React, { useContext } from \"react\"\r\nimport { LanguageContext } from \"../context/LanguageContext\"\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\"\r\n\r\nimport { navigate } from \"gatsby\"\r\n\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\"\r\n\r\nimport { QuizSessionContext } from \"../context/QuizSessionContext\"\r\n\r\nfunction ChapterElement(props) {\r\n  const { getResourceText } = useContext(LanguageContext)\r\n\r\n  const { setCurrentQuizSettings, getCurrentSettings } = useContext(\r\n    QuizSessionContext\r\n  )\r\n\r\n  const handleChapterChange = chp => {\r\n    const source = require(\"../data/articles/allchapters.json\")\r\n\r\n    let questionType = -1\r\n\r\n    if (props.goto === \"/quizPage/\") {\r\n      questionType = 1\r\n    }\r\n\r\n    const settings = {\r\n      words: source[chp],\r\n      chapter: chp,\r\n      questionType: questionType,\r\n    }\r\n\r\n    setCurrentQuizSettings(settings)\r\n    handleNavigation(chp)\r\n  }\r\n\r\n  const handleNavigation = chp => {\r\n    if (getCurrentSettings().chapter !== null) {\r\n      navigate(props.goto, { state: { chapter: chp } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {getResourceText(props.titleKey)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {getResourceText(props.sublineKey)}\r\n        </Typography>\r\n        <Grid item>\r\n          <ToggleButtonGroup\r\n            style={{ display: \"block\" }}\r\n            exclusive\r\n            size=\"large\"\r\n          >\r\n            {[0, 1, 2, 3, 4, 5, 6].map((chp, index) => (\r\n              <ToggleButton\r\n                onClick={() => handleChapterChange(chp)}\r\n                style={{ width: \"100%\" }}\r\n                key={index}\r\n                value={chp}\r\n              >\r\n                {`${getResourceText(\"Chapter\")} ${chp + 1}`}\r\n              </ToggleButton>\r\n            ))}\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ChapterElement\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport ChapterElement from \"../components/chapterelement\"\r\nimport { globalHistory } from \"@reach/router\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nfunction Chapters({ location }) {\r\n  let goto = \"/quiz/\"\r\n  let titleKey = \"\"\r\n  let sublineKey = \"\"\r\n  if (typeof location.state !== \"undefined\" && location.state) {\r\n    goto = globalHistory.location.state.goto\r\n    titleKey = globalHistory.location.state.titleKey\r\n    sublineKey = globalHistory.location.state.sublineKey\r\n  }\r\n\r\n  if (titleKey === \"\") {\r\n    navigate(\"/home\")\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <ChapterElement goto={goto} titleKey={titleKey} sublineKey={sublineKey} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Chapters\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return (/*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.index-of\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: theme.shape.borderRadius,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      padding: '0px 11px 0px 12px',\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `size=\"small\"`. */\n    groupedSizeSmall: {\n      padding: '0px 7px 0px 8px'\n    },\n\n    /* Styles applied to the children if `size=\"large\"`. */\n    groupedSizeLarge: {\n      padding: '0px 15px 0px 16px'\n    }\n  };\n};\nvar ToggleButtonGroup = React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = _toConsumableArray(value);\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? [].concat(_toConsumableArray(value), [buttonValue]) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return (/*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: \"group\"\n    }, other), React.Children.map(children, function (child) {\n      if (!React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"Material-UI: the ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      var _child$props = child.props,\n          buttonSelected = _child$props.selected,\n          buttonValue = _child$props.value;\n      var selected = buttonSelected === undefined ? isValueSelected(buttonValue, value) : buttonSelected;\n      return React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className, size !== 'medium' && classes[\"groupedSize\".concat(capitalize(size))]),\n        selected: selected,\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        size: size\n      });\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The size of the buttons.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.is-array\";\n// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}"],"sourceRoot":""}