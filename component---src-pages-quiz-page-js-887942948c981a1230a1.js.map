{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/utils/createSvgIcon.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","webpack:///./src/components/quizmodules/articles/articleselector.js","webpack:///./src/components/shared/word.js","webpack:///./src/components/quizmodules/articles/articlesQuizModule.js","webpack:///./src/pages/quizPage.js"],"names":["createSvgIcon","path","displayName","Component","props","ref","createElement","muiName","memo","forwardRef","children","classes","className","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","onChange","onClick","selected","_props$size","size","value","other","ButtonBase","root","concat","capitalize","focusRipple","event","isDefaultPrevented","label","withStyles","theme","typography","button","boxSizing","borderRadius","shape","height","padding","border","palette","action","active","color","backgroundColor","borderLeft","marginLeft","textDecoration","text","primary","width","display","alignItems","justifyContent","sizeSmall","fontSize","pxToRem","sizeLarge","name","ToggleButtonGroup","_props$exclusive","exclusive","handleChange","buttonValue","newValue","index","indexOf","splice","handleExclusiveChange","role","map","child","_child$props","buttonSelected","undefined","candidate","Array","isArray","isValueSelected","grouped","background","paper","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedSizeSmall","groupedSizeLarge","ArticleSelector","getResourceText","useContext","LanguageContext","Grid","item","articleId","articleVal","setAnswer","indexValue","key","Word","container","spacing","xs","style","textAlign","word","ArticlesQuiz","BaseQuizSessionContext","checkQuestion","getIsWrongText","getDisplayedQuestions","getCurrentAnswer","getCurrentWord","getWordsSource","margin","maxWidth","correctPoints","correctAnswerCount","wrongPoints","wrongAnswerCount","answer","currentAnswer","answerCorrect","questionType","navigate","correct","length","QuizPage"],"mappings":"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","file":"component---src-pages-quiz-page-js-887942948c981a1230a1.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent ButtonBase\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      height: 48,\n      padding: '0px 12px',\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 40,\n      padding: '0px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      height: 56,\n      padding: '0px 16px',\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: theme.shape.borderRadius,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      padding: '0px 11px 0px 12px',\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `size=\"small\"`. */\n    groupedSizeSmall: {\n      padding: '0px 7px 0px 8px'\n    },\n\n    /* Styles applied to the children if `size=\"large\"`. */\n    groupedSizeLarge: {\n      padding: '0px 15px 0px 16px'\n    }\n  };\n};\nvar ToggleButtonGroup = React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = _toConsumableArray(value);\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? [].concat(_toConsumableArray(value), [buttonValue]) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: \"group\"\n  }, other), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var _child$props = child.props,\n        buttonSelected = _child$props.selected,\n        buttonValue = _child$props.value;\n    var selected = buttonSelected === undefined ? isValueSelected(buttonValue, value) : buttonSelected;\n    return React.cloneElement(child, {\n      className: clsx(classes.grouped, child.props.className, size !== 'medium' && classes[\"groupedSize\".concat(capitalize(size))]),\n      selected: selected,\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      size: size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import React, { useContext } from \"react\"\r\nimport { LanguageContext } from \"../../../context/LanguageContext\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\"\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\"\r\n\r\nfunction ArticleSelector(props) {\r\n  const { getResourceText } = useContext(LanguageContext)\r\n\r\n  const handleValueChange = (event, articleVal) => {\r\n    props.setAnswer({ articleId: articleVal, indexValue: props.index })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid item>\r\n        <ToggleButtonGroup\r\n          value={props.articleId}\r\n          onChange={handleValueChange}\r\n          exclusive\r\n          size=\"large\"\r\n        >\r\n          <ToggleButton key={1} value={1}>\r\n            {getResourceText(\"Der\")}\r\n          </ToggleButton>\r\n          <ToggleButton key={2} value={2}>\r\n            {getResourceText(\"Die\")}\r\n          </ToggleButton>\r\n          <ToggleButton key={3} value={3}>\r\n            {getResourceText(\"Das\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ArticleSelector\r\n","import React from \"react\"\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\n\r\nfunction Word(props) {\r\n  // const speech = new Speech()\r\n  // speech\r\n  //   .init({\r\n  //     volume: 1,\r\n  //     lang: \"de-DE\",\r\n  //     rate: 1,\r\n  //     pitch: 0.9,\r\n  //     voice: \"Google Deutsch\",\r\n  //     //splitSentences: false,\r\n  //     listeners: {},\r\n  //   })\r\n  //   .then(data => {})\r\n  //   .catch(e => {\r\n  //     console.error(\"An error occured while initializing : \", e)\r\n  //   })\r\n\r\n  const handleClick = () => {\r\n    // speech\r\n    //   .speak({\r\n    //     text: props.word,\r\n    //   })\r\n    //   .then(() => {})\r\n    //   .catch(e => {})\r\n  }\r\n  return (\r\n    <>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11} style={{ height: \"40px\", textAlign: \"center\" }}>\r\n          <h3>{props.word} </h3>\r\n        </Grid>\r\n        <Grid item xs={1} style={{ height: \"40px\", textAlign: \"center\" }}>\r\n          <PlayCircleOutlineIcon\r\n            style={{ height: \"40px\", width: \"35px\" }}\r\n            onClick={() => handleClick()}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Word\r\n","import React, { useContext } from \"react\"\r\nimport NextButton from \"../../shared/nextbutton\"\r\nimport ArticleSelector from \"./articleselector\"\r\nimport QuizScore from \"../../shared/quizscore\"\r\nimport Word from \"../../shared/word\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nimport { BaseQuizSessionContext } from \"../../../context/BaseQuizSessionProvider\"\r\n\r\nfunction ArticlesQuiz() {\r\n  const {\r\n    checkQuestion,\r\n    setAnswer,\r\n    getIsWrongText,\r\n    getDisplayedQuestions,\r\n    getCurrentAnswer,\r\n    getCurrentWord,\r\n    getWordsSource,\r\n  } = useContext(BaseQuizSessionContext)\r\n\r\n  const questionType = 1\r\n\r\n  function chekQuestionWrapper(answer, answerCorrect, questionType) {\r\n    // if true then end of quiz\r\n    if (checkQuestion(answer, answerCorrect, questionType)) {\r\n      navigate(\"/quizCompletionPage\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <QuizScore\r\n          correctPoints={getCurrentAnswer().correctAnswerCount}\r\n          wrongPoints={getCurrentAnswer().wrongAnswerCount}\r\n        />\r\n        <br />\r\n        <ArticleSelector\r\n          articleId={getCurrentAnswer().answer}\r\n          setAnswer={setAnswer}\r\n          index={getCurrentAnswer().index}\r\n          currentAnswer={getCurrentAnswer().answer}\r\n        />\r\n        <br />\r\n        <Word word={getCurrentWord().word} />\r\n        <p style={{ color: \"red\", textAlign: \"center\" }}>{getIsWrongText()}</p>\r\n        <br />\r\n        <br />\r\n        <NextButton\r\n          checkQuestion={chekQuestionWrapper}\r\n          answer={getCurrentAnswer().answer}\r\n          answerCorrect={getCurrentWord().correct}\r\n          questionType={questionType}\r\n        />\r\n        <br />\r\n        <p>\r\n          {getDisplayedQuestions().length}/{getWordsSource().length}\r\n        </p>\r\n        <br />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ArticlesQuiz\r\n","import React from \"react\"\r\nimport ArticlesQuiz from \"../components/quizmodules/articles/articlesQuizModule\"\r\nimport Layout from \"../components/general/layout\"\r\n\r\nfunction QuizPage() {\r\n  return (\r\n    <Layout>\r\n      <ArticlesQuiz />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default QuizPage\r\n"],"sourceRoot":""}