{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./src/components/chapterelement.js","webpack:///./src/pages/chapterchoice.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","ChapterElement","getResourceText","useContext","LanguageContext","QuizSessionContext","setCurrentQuizSettings","getCurrentSettings","setWordListSource","getQuestionType","questionType","goto","getQuestionSource","source","require","handleChapterChange","chp","settings","words","chapter","saveQuestionSettings","handleNavigation","navigate","state","Typography","gutterBottom","variant","component","titleKey","color","sublineKey","Grid","item","map","index","style","width","CardContent","CardActions","Button","size","onClick","wordListSource","handleOpenWordList","Chapters","location","globalHistory","children","_props$color","_props$component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","startIconProp","startIcon","_props$type","type","_props$variant","concat","colorInherit","focusRipple","focusVisible","label","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","text","primary","transition","transitions","create","duration","textDecoration","backgroundColor","action","hoverOpacity","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","_props$disableSpacing","disableSpacing","spacing","Component","paddingBottom"],"mappings":"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","file":"component---src-pages-chapterchoice-js-739b82a15d5885ae4873.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return (/*#__PURE__*/React.createElement(Paper, _extends({\n      className: clsx(classes.root, className),\n      elevation: raised ? 8 : 1,\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import React, { useContext } from \"react\"\r\nimport { LanguageContext } from \"../context/LanguageContext\"\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nimport { navigate } from \"gatsby\"\r\n\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\n\r\nimport { QuizSessionContext } from \"../context/QuizSessionContext\"\r\n\r\nfunction ChapterElement(props) {\r\n  const { getResourceText } = useContext(LanguageContext)\r\n\r\n  const {\r\n    setCurrentQuizSettings,\r\n    getCurrentSettings,\r\n    setWordListSource,\r\n  } = useContext(QuizSessionContext)\r\n\r\n  const getQuestionType = () => {\r\n    var questionType = -1\r\n    if (props.goto === \"/quizPage/\") {\r\n      questionType = 1\r\n    } else if (props.goto === \"/plural/\") {\r\n      questionType = 2\r\n    } else if (props.goto === \"/opposites/\") {\r\n      questionType = 3\r\n    }\r\n    return questionType\r\n  }\r\n\r\n  const getQuestionSource = () => {\r\n    var source = require(\"../data/articles/allchapters.json\")\r\n    var questionType = getQuestionType()\r\n    switch (questionType) {\r\n      case 2:\r\n        source = require(\"../data/plural/allchapters.json\")\r\n        break\r\n      case 3:\r\n        source = require(\"../data/opposites/allchapters.json\")\r\n        break\r\n    }\r\n    return source\r\n  }\r\n\r\n  const saveQuestionSettings = chp => {\r\n    let questionType = getQuestionType()\r\n\r\n    const source = getQuestionSource()\r\n\r\n    const settings = {\r\n      words: source[chp],\r\n      chapter: chp,\r\n      questionType: questionType,\r\n    }\r\n\r\n    setCurrentQuizSettings(settings)\r\n  }\r\n\r\n  const handleChapterChange = chp => {\r\n    saveQuestionSettings(chp)\r\n    handleNavigation(chp)\r\n  }\r\n\r\n  const handleOpenWordList = chp => {\r\n    if (chp === null) return\r\n\r\n    var source = getQuestionSource()\r\n\r\n    const wordListSource = source[chp]\r\n    setWordListSource(wordListSource)\r\n    navigate(\"/wordspage/\")\r\n  }\r\n\r\n  const handleNavigation = chp => {\r\n    if (getCurrentSettings().chapter !== null) {\r\n      navigate(props.goto, { state: { chapter: chp } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n        {getResourceText(props.titleKey)}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        {getResourceText(props.sublineKey)}\r\n      </Typography>\r\n      <Grid item>\r\n        {[0, 1, 2, 3, 4, 5, 6].map((chp, index) => (\r\n          // <ToggleButton\r\n          //   onClick={() => handleChapterChange(chp)}\r\n          //   style={{ width: \"100%\" }}\r\n          //   key={index}\r\n          //   value={chp}\r\n          // >\r\n\r\n          // </ToggleButton>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {`${getResourceText(\"Chapter\")} ${chp + 1}`}\r\n              </Typography>\r\n              <Grid item></Grid>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => handleChapterChange(chp)}\r\n                color=\"primary\"\r\n              >\r\n                {getResourceText(\"Start\")}\r\n              </Button>\r\n\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => handleOpenWordList(chp)}\r\n                color=\"primary\"\r\n              >\r\n                {getResourceText(\"WordList\")}\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChapterElement\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport ChapterElement from \"../components/chapterelement\"\r\nimport { globalHistory } from \"@reach/router\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nfunction Chapters({ location }) {\r\n  let goto = \"/quiz/\"\r\n  let titleKey = \"\"\r\n  let sublineKey = \"\"\r\n  if (typeof location.state !== \"undefined\" && location.state) {\r\n    goto = globalHistory.location.state.goto\r\n    titleKey = globalHistory.location.state.titleKey\r\n    sublineKey = globalHistory.location.state.sublineKey\r\n  }\r\n\r\n  if (titleKey === \"\") {\r\n    navigate(\"/home\")\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <ChapterElement goto={goto} titleKey={titleKey} sublineKey={sublineKey} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Chapters\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration[\"short\"]\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return (/*#__PURE__*/React.createElement(ButtonBase, _extends({\n      className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n      component: component,\n      disabled: disabled,\n      focusRipple: !disableFocusRipple,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      ref: ref,\n      type: type\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.label\n    }, startIcon, children, endIcon))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return (/*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return (/*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);"],"sourceRoot":""}