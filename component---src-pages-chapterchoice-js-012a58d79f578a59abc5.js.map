{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./src/components/general/chapterelement.js","webpack:///./src/pages/chapterchoice.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","ChapterElement","getResourceText","useContext","LanguageContext","BaseQuizSessionContext","setCurrentQuizSettings","getCurrentSettings","setWordListSource","getQuestionType","questionType","goto","getQuestionSource","source","require","handleChapterChange","chp","settings","words","chapter","saveQuestionSettings","handleNavigation","navigate","state","Typography","gutterBottom","variant","component","titleKey","color","sublineKey","Grid","item","map","index","key","style","width","CardContent","CardActions","Button","size","onClick","wordListSource","handleOpenWordList","Chapters","location","globalHistory","_props$disableSpacing","disableSpacing","spacing","display","alignItems","padding","marginLeft","_props$component","Component","paddingBottom"],"mappings":"8FAAA,4EAYIA,EAAoB,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoB,gBAAoB,IAAO,YAAS,CACtDG,UAAW,YAAKD,EAAQK,KAAMJ,GAC9BK,UAAWH,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OAGU,gBApBK,CAElBC,KAAM,CACJE,SAAU,WAiBoB,CAChCC,KAAM,WADO,CAEZX,I,28iBCqGYY,MAlHf,SAAwBX,GAAQ,IACtBY,EAAoBC,qBAAWC,KAA/BF,gBADqB,EAOzBC,qBAAWE,KAHbC,EAJ2B,EAI3BA,uBACAC,EAL2B,EAK3BA,mBACAC,EAN2B,EAM3BA,kBAGIC,EAAkB,WACtB,IAAIC,GAAgB,EAQpB,MAPmB,eAAfpB,EAAMqB,KACRD,EAAe,EACS,aAAfpB,EAAMqB,KACfD,EAAe,EACS,gBAAfpB,EAAMqB,OACfD,EAAe,GAEVA,GAGHE,EAAoB,WACxB,IAAIC,EAASC,EAAQ,QAErB,OADmBL,KAEjB,KAAK,EACHI,EAASC,EAAQ,QACjB,MACF,KAAK,EACHD,EAASC,EAAQ,QAGrB,OAAOD,GAiBHE,EAAsB,SAAAC,IAdC,SAAAA,GAC3B,IAAIN,EAAeD,IAIbQ,EAAW,CACfC,MAHaN,IAGCI,GACdG,QAASH,EACTN,aAAcA,GAGhBJ,EAAuBW,GAIvBG,CAAqBJ,GACrBK,EAAiBL,IAabK,EAAmB,SAAAL,GACc,OAAjCT,IAAqBY,SACvBG,mBAAShC,EAAMqB,KAAM,CAAEY,MAAO,CAAEJ,QAASH,MAI7C,OACE,oCACE,kBAACQ,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CzB,EAAgBZ,EAAMsC,WAEzB,kBAACJ,EAAA,EAAD,CAAYE,QAAQ,QAAQG,MAAM,gBAAgBF,UAAU,KACzDzB,EAAgBZ,EAAMwC,aAEzB,kBAACC,EAAA,EAAD,CAAMC,MAAI,GACP,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAACjB,EAAKkB,GAAN,OACzB,yBAAKC,IAAKnB,GACR,kBAAC3B,EAAA,EAAD,CAAM+C,MAAO,CAAEC,MAAO,SACpB,kBAACC,EAAA,EAAD,KACE,kBAACd,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC1CzB,EAAgB,WADtB,KACoCc,EAAM,IAE1C,kBAACe,EAAA,EAAD,CAAMC,MAAI,KAEZ,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLC,QAAS,kBAAM3B,EAAoBC,IACnCa,MAAM,WAEL3B,EAAgB,UAGnB,kBAACsC,EAAA,EAAD,CACEC,KAAK,QACLC,QAAS,kBA7CE,SAAA1B,GACzB,GAAY,OAARA,EAAJ,CAEA,IAEM2B,EAFO/B,IAEiBI,GAC9BR,EAAkBmC,GAClBrB,mBAAS,gBAsCoBsB,CAAmB5B,IAClCa,MAAM,WAEL3B,EAAgB,eAIvB,oC,YC7FG2C,UArBf,YAAiC,IAAbC,EAAY,EAAZA,SACdnC,EAAO,SACPiB,EAAW,GACXE,EAAa,GAWjB,YAV8B,IAAnBgB,EAASvB,OAAyBuB,EAASvB,QACpDZ,EAAOoC,gBAAcD,SAASvB,MAAMZ,KACpCiB,EAAWmB,gBAAcD,SAASvB,MAAMK,SACxCE,EAAaiB,gBAAcD,SAASvB,MAAMO,YAG3B,KAAbF,GACFN,mBAAS,SAIT,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAgBX,KAAMA,EAAMiB,SAAUA,EAAUE,WAAYA,O,kCCvBlE,gEAoBIS,EAA2B,cAAiB,SAAqBjD,EAAOC,GAC1E,IAAIyD,EAAwB1D,EAAM2D,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DxD,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBG,EAAQ,YAAyBN,EAAO,CAAC,iBAAkB,UAAW,cAE1E,OAAoB,gBAAoB,MAAO,YAAS,CACtDG,UAAW,YAAKD,EAAQK,KAAMJ,GAAYwD,GAAkBzD,EAAQ0D,SACpE3D,IAAKA,GACJK,OAGU,gBA5BK,CAElBC,KAAM,CACJsD,QAAS,OACTC,WAAY,SACZC,QAAS,GAIXH,QAAS,CACP,yBAA0B,CACxBI,WAAY,KAiBgB,CAChCtD,KAAM,kBADO,CAEZuC,I,oCCnCH,gEAcID,EAA2B,cAAiB,SAAqBhD,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClB8D,EAAmBjE,EAAMqC,UACzB6B,OAAiC,IAArBD,EAA8B,MAAQA,EAClD3D,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoB,gBAAoBkE,EAAW,YAAS,CAC1D/D,UAAW,YAAKD,EAAQK,KAAMJ,GAC9BF,IAAKA,GACJK,OAGU,gBAtBK,CAElBC,KAAM,CACJwD,QAAS,GACT,eAAgB,CACdI,cAAe,MAiBa,CAChCzD,KAAM,kBADO,CAEZsC","file":"component---src-pages-chapterchoice-js-012a58d79f578a59abc5.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import React, { useContext } from \"react\"\r\nimport { LanguageContext } from \"../../context/LanguageContext\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nimport { navigate } from \"gatsby\"\r\n\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\n\r\nimport { BaseQuizSessionContext } from \"../../context/BaseQuizSessionProvider\"\r\n\r\nfunction ChapterElement(props) {\r\n  const { getResourceText } = useContext(LanguageContext)\r\n\r\n  const {\r\n    setCurrentQuizSettings,\r\n    getCurrentSettings,\r\n    setWordListSource,\r\n  } = useContext(BaseQuizSessionContext)\r\n\r\n  const getQuestionType = () => {\r\n    var questionType = -1\r\n    if (props.goto === \"/quizPage/\") {\r\n      questionType = 1\r\n    } else if (props.goto === \"/plural/\") {\r\n      questionType = 2\r\n    } else if (props.goto === \"/opposites/\") {\r\n      questionType = 3\r\n    }\r\n    return questionType\r\n  }\r\n\r\n  const getQuestionSource = () => {\r\n    var source = require(\"../quizmodules/articles/data/allchapters.json\")\r\n    var questionType = getQuestionType()\r\n    switch (questionType) {\r\n      case 2:\r\n        source = require(\"../quizmodules/plural/data/allchapters.json\")\r\n        break\r\n      case 3:\r\n        source = require(\"../quizmodules/opposites/data/allchapters.json\")\r\n        break\r\n    }\r\n    return source\r\n  }\r\n\r\n  const saveQuestionSettings = chp => {\r\n    let questionType = getQuestionType()\r\n\r\n    const source = getQuestionSource()\r\n\r\n    const settings = {\r\n      words: source[chp],\r\n      chapter: chp,\r\n      questionType: questionType,\r\n    }\r\n\r\n    setCurrentQuizSettings(settings)\r\n  }\r\n\r\n  const handleChapterChange = chp => {\r\n    saveQuestionSettings(chp)\r\n    handleNavigation(chp)\r\n  }\r\n\r\n  const handleOpenWordList = chp => {\r\n    if (chp === null) return\r\n\r\n    var source = getQuestionSource()\r\n\r\n    const wordListSource = source[chp]\r\n    setWordListSource(wordListSource)\r\n    navigate(\"/wordspage/\")\r\n  }\r\n\r\n  const handleNavigation = chp => {\r\n    if (getCurrentSettings().chapter !== null) {\r\n      navigate(props.goto, { state: { chapter: chp } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n        {getResourceText(props.titleKey)}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        {getResourceText(props.sublineKey)}\r\n      </Typography>\r\n      <Grid item>\r\n        {[0, 1, 2, 3, 4, 5, 6].map((chp, index) => (\r\n          <div key={chp}>\r\n            <Card style={{ width: \"100%\" }}>\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {`${getResourceText(\"Chapter\")} ${chp + 1}`}\r\n                </Typography>\r\n                <Grid item></Grid>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => handleChapterChange(chp)}\r\n                  color=\"primary\"\r\n                >\r\n                  {getResourceText(\"Start\")}\r\n                </Button>\r\n\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => handleOpenWordList(chp)}\r\n                  color=\"primary\"\r\n                >\r\n                  {getResourceText(\"WordList\")}\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChapterElement\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/general/layout\"\r\nimport ChapterElement from \"../components/general/chapterelement\"\r\nimport { globalHistory } from \"@reach/router\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nfunction Chapters({ location }) {\r\n  let goto = \"/quiz/\"\r\n  let titleKey = \"\"\r\n  let sublineKey = \"\"\r\n  if (typeof location.state !== \"undefined\" && location.state) {\r\n    goto = globalHistory.location.state.goto\r\n    titleKey = globalHistory.location.state.titleKey\r\n    sublineKey = globalHistory.location.state.sublineKey\r\n  }\r\n\r\n  if (titleKey === \"\") {\r\n    navigate(\"/home\")\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <ChapterElement goto={goto} titleKey={titleKey} sublineKey={sublineKey} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Chapters\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);"],"sourceRoot":""}